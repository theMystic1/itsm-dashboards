import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "@/styles/globals.css";
import { Jost } from "next/font/google";
import { cookies } from "next/headers";

const jost = Jost({
  subsets: ["latin"],
  variable: "--font-jost", // creates a CSS variable
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// const boot =

// const raw =

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const raw = (await cookies()).get("app-theme");
  const cssVars: React.CSSProperties = {};

  if (raw?.value) {
    try {
      const t = JSON.parse(raw.value);
      // t.primary and t.secondary are assumed to be objects like { "500": "#0ea5a4", ... }
      const fillVars = (
        prefix: string,
        scale: Record<string, string> | undefined
      ) => {
        if (!scale) return;
        for (const k in scale) {
          // CSS custom properties must be string keys like '--color-primary-500'
          (cssVars as any)[`--color-${prefix}-${k}`] = scale[k];
        }
      };
      fillVars("primary", t.primary);
      fillVars("secondary", t.secondary);
    } catch {
      // ignore invalid JSON
    }
  }
  return (
    <html lang="en" style={cssVars as React.CSSProperties}>
      <head>
        <script />
      </head>
      <body className={`${jost.variable} antialiased`}>{children}</body>
    </html>
  );
}
